//정말 예측 불가능한 에러가 일어났을 때 처리하는 방법
// uncaughtException 이벤트 리스너를 달아줄경우 처리하지 못한 에러가 발생했을 경우 이벤트 리스너가 실행되고 프로세스가 유지된다.
// node 공식문서에서는 uncaughtException를 최후의 수단으로 사용핟라고 함. 왠만하면 쓰지말자
// 해당 이벤트 발생후 다음 동작 코드가 제대로 동작할지는 아무도 모른다.
// 즉 복구 코드를 넣어도 제대로 동작할지 확신 못함.
//차라리 단순히 에러 내용을 기록하는 정도로만 사용하고 process.exit() 처리를 하는게 좋다.
// 나중에 종료한다음에 다시 시작하는 방법을 배울 것임.

//서버는 에러와의 서움이다.
//모든 에러 상황에 대비하는 것이 최선이나, 시간이나 비용, 인력등의 제약으로 미처 대비하지 못한 에러가 있을 수도 있음.
//따라서 에러가 발생 시 철저히 기록(로깅)하는 습관을 들이고, 주기적으로 로그를 확인하면서 보완해야함.

process.on("uncaughtException", err => {
  console.error("예기치 못한 에러", err);
});

setInterval(() => {
  throw new Error("서버를 고장내부리자");
}, 1000);

setInterval(() => {
  console.log("실행됩니더");
}, 2000);
