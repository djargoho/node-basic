자바스크립트는 스크립트 언어이므로 미리 컴파일 하지 않아도 즉석에서 코드를 실행 가능.

노드도 이와 비슷한 콘솔을 제공 이를 REPL

1. REPL 사용하기 
Read , Eval , Print , Loop
읽고   해석   반환    반복

이를 통틀어 REPL 이라 부름.

node를 입력 하면 REPL (NODE 콘솔)이 활성화가 됨.
활성화 모양 =>  ( '>')

종료 명령어 => (.exit)
아니면 그냥 ctrl+c 하면 됌

그냥 테스트 용도 사용한다고 생각하면 됌



2. 모듈
노드는 코드를 모듈로 만들 수 있다는 점에서 브라우저의 자바스크립트와는 다르다. 
모듈 => 특정한 기능을 하는 함수나 변수들의 집합(패키지)


3. global (노드의 내장 객체)
글로벌은 웹에서의 window, document 이다 (전역 선언때 쓸 수 있다)
require, module도 월래는 앞에 global이 붙어있다.
[global의 남용은 자제해야 한다.]


4.노드 내장모듈 (node-inner-module 참고)

1) os
컴퓨터 내부 자원에 빈번하게 접근하는 경우 사용. 
일반적인 웹 서비스를 제작할 떄는 사용 빈도가 높지 않으나, 
운영체제 별로 다른 서비스를 제공하고 싶을 때 os 모듈이 유용 

2)path 
폴더와 파일의 경로를 쉽게 조작하도록 도와주는 모듈 
path모듈이 필요한 이유 
- 운영체제별로 구분자가 다름(Window 구분자 '\' , PoSIX(리눅스 기반) 구분자 '/' ) 

3)url 
인터넷 주소를 쉽게 조작하도록 도와주는 모듈 

4) querystring
WHATWG 방식의 url 대신 기존 노드의 url을 사용할 때, 
search 부분을 사용하기 쉽게 객체로 만드는 모듈 

5) crypto 

참고사이트 : https://nodejs.org/api/crypto.html

다양한 방식의 암호화를 도와주는 모듈. 
실제 서비스에 정말 유용. 
고객의 비밀번호는 꼭 암호화 해야함.

5.1) 단방향 암호화 : 복호화 할 수 없는 암호화 방식을 의미
복호화 : 암호화된 문자열을 원래문자열로 되돌려놓는 걸 의미
고객번호 비밀번호는 보통 단방향 암호화 알고리즘을 사용해서 암호화 

단방향 암호화 알고리즘은 보통 해시기법을 이용. 
해시 기법: 어떤 문자열을 고정된 길이의 다른 문자열로 바꿔버리는 방식 
ex) qwetqwtt => qeds, kmfaksfmafasd => qpdd 즉 어떤 문자던 같은 길이의 문자열로 바꿈
입력 문자열의 길이는 다르지만, 출력 문자열의 길이는 고정 

5.2) 양방향 암호화 : 복호화 가능한 암호화 방식
암호를 복호화 할려면 암호화할 때 사용한 키와 같은 키를 사용해야함 


6) util
각종 편의 기능을 모아둔 모듈. 
계속해서 API 추가되고 있다. 

5.파일 시스템 접근하는 모듈 (file-system 참고)
fs 모듈은 파일 시스템에 접근하는 모듈. 
파일을 생성하거나 삭제하고, 읽거나 쓸 수 있다.

1) 동기 메서드, 비동기 메서드
